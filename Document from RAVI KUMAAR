{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNmXyGxZZVU/qOqPoKhwX29"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6lf4pCxOz0q2","executionInfo":{"status":"ok","timestamp":1754222578038,"user_tz":-330,"elapsed":10532,"user":{"displayName":"Sajit Kumar","userId":"11690719225305112574"}},"outputId":"79629692-2c55-46f8-f97b-792a37fe405b"},"outputs":[{"output_type":"stream","name":"stdout","text":["Enter hours studied: 3.5\n","Prediction: Fail\n"]}],"source":["import numpy as np\n","from sklearn.linear_model import LogisticRegression\n","\n","# Training Data\n","X = np.array([[1], [2], [3], [4], [5], [6], [7], [8]])  # Hours studied\n","y = np.array([0, 0, 0, 0, 1, 1, 1, 1])                 # 0 = Fail, 1 = Pass\n","\n","# Train Logistic Regression Model\n","model = LogisticRegression()\n","model.fit(X, y)\n","\n","# Take input from user\n","try:\n","    hours = float(input(\"Enter hours studied: \"))\n","    prediction = model.predict([[hours]])[0]\n","\n","    if prediction == 1:\n","        print(\"Prediction: Pass\")\n","    else:\n","        print(\"Prediction: Fail\")\n","\n","except ValueError:\n","    print(\" Invalid input. Please enter a number.\")"]}]}